% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/schedule_task.R
\name{schedule_task}
\alias{schedule_task}
\title{Schedule Task (CRON-like)}
\usage{
schedule_task(
  minute,
  hour,
  day,
  month,
  weekday,
  user,
  expr,
  log = TRUE,
  ref_time = Sys.time(),
  sent_check = FALSE,
  sent_delay = 15,
  sent_project = NULL,
  sent_account = connect_outlook(),
  sent_folder = read_secret("mail.sent_subfolder")
)
}
\arguments{
\item{minute}{one or more values between 0-59, or \code{.} or \code{"*"} for each minute}

\item{hour}{one or more values between 0-23, or \code{.} or \code{"*"} for each hour}

\item{day}{one or more values between 1-31, or \code{.} or \code{"*"} for each day}

\item{month}{one or more values between 1-12, or \code{.} or \code{"*"} for each mpnth}

\item{weekday}{one or more values between 0-7 (Sunday is both 0 and 7; Monday is 1), or \code{.} or \code{"*"} for each weekday}

\item{user}{logged in user, must correspond with \code{Sys.info()["user"]}. Currently logged in user is "\Sexpr{certeprojects:::get_current_user()}".}

\item{expr}{expression to run}

\item{log}{a \link{logical} to indicate whether this message should be printed: \emph{Running scheduled task at...}}

\item{ref_time}{time to use for reference, defaults to \code{\link[=Sys.time]{Sys.time()}}}

\item{sent_check}{either \code{TRUE} or \code{FALSE} (default). Check if a certain project had a mail sent on the date of \code{ref_time}.}

\item{sent_delay}{delay in minutes}

\item{sent_project}{project number}

\item{sent_account}{Outlook account, to search sent mails}

\item{sent_folder}{Name of Outlook folder, to search sent mails}
}
\description{
This will start an expression if requirements are met, using a CRON-like syntax (\url{https://cron.help}).
}
\details{
The Windows Task Scheduler must be set up to use this function. Most convenient is to:
\enumerate{
\item Create an \R file such as \code{R_cron.R} with calls to \code{\link[=schedule_task]{schedule_task()}}
\item Create a batch file such as \code{R_cron.bat} that runs \code{R_cron.R} with \verb{R CMD BATCH}
\item Set up a Task Scheduler task that runs \code{R_cron.bat} every minute
}
}
\examples{
count_it <- function() {
  1 + 1
}

# units:      M  H  d  m  wd
schedule_task(., ., ., ., ., "user", count_it()) # every minute
schedule_task(0, ., ., ., ., "user", count_it()) # start of each hour
schedule_task(0, 7, ., ., ., "user", count_it()) # everyday at 7h00
schedule_task(0, 7, 1, ., ., "user", count_it()) # first day of month at 7h00
schedule_task(0, 7, ., 2, ., "user", count_it()) # everyday day in February at 7h00
schedule_task(0, 7, ., ., 1, "user", count_it()) # every Monday at 7h00
schedule_task(0, 7, 1, 2, ., "user", count_it()) # every 1st of February at 7h00
schedule_task(0, 7, ., 2, 1, "user", count_it()) # every Monday in February at 7h00
schedule_task(0, 7, 1, 2, 1, "user", count_it()) # each February 1st if it's a Monday at 7h00
schedule_task(0, 7,29, 2, ., "user", count_it()) # once every 4 years

# examples of combinations

# everyday at 7h00 and 7h30
schedule_task(c(0, 30), 7, ., ., ., "user", count_it())
# everyday at 7h00 and 15h00
schedule_task(0, c(7, 15), ., ., ., "user", count_it())
# everyday at 7h00 and 7h30 and 15h00 and 15h30
schedule_task(c(0, 30), c(7, 15), ., ., ., "user", count_it())
# every second Monday of the month at 7h00:
schedule_task(0, 7, c(8:14), ., 1, "user", count_it())
# every 15th of April at 8h30 and 16h30:
schedule_task(30, c(8, 16), 15, 4, ., "user", count_it())
# once per quarter at 8h00 on the first day of the month:
schedule_task(0, 8, 1, c(1, 4, 7, 10), ., "user", count_it())
}
