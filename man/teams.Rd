% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ms_teams.R
\name{teams}
\alias{teams}
\alias{teams_projects_channel}
\alias{teams_new_project}
\alias{teams_browse_project}
\alias{teams_list_project_files}
\alias{teams_download_project_file}
\alias{teams_get_project_file}
\alias{teams_open_project_analysis_file}
\alias{teams_render_project_file}
\alias{teams_view_project_file}
\alias{teams_upload_project_file}
\alias{teams_download_file}
\alias{teams_download_folder}
\alias{teams_upload_file}
\alias{teams_upload_folder}
\alias{pick_teams_item}
\alias{teams_name}
\alias{teams_channels_list}
\alias{teams_view_sharepoint}
\alias{teams_send_message}
\alias{teams_open}
\alias{teams_get_link}
\title{Connect to Microsoft Teams via Microsoft 365}
\usage{
teams_projects_channel(
  projects_channel_id = read_secret("teams.projects.channel_id"),
  overwrite = FALSE,
  account = connect_teams()
)

teams_new_project(
  task,
  channel = teams_projects_channel(),
  planner = connect_planner()
)

teams_browse_project(
  task,
  channel = teams_projects_channel(),
  planner = connect_planner()
)

teams_list_project_files(
  task,
  channel = teams_projects_channel(),
  planner = connect_planner()
)

teams_download_project_file(
  file,
  task,
  channel = teams_projects_channel(),
  planner = connect_planner()
)

teams_get_project_file(
  file,
  task,
  channel = teams_projects_channel(),
  planner = connect_planner()
)

teams_open_project_analysis_file(
  task,
  channel = teams_projects_channel(),
  planner = connect_planner()
)

teams_render_project_file(
  file,
  task,
  output_file = NULL,
  fun = rmarkdown::render,
  ...,
  channel = teams_projects_channel(),
  planner = connect_planner()
)

teams_view_project_file(
  file,
  task,
  channel = teams_projects_channel(),
  planner = connect_planner()
)

teams_upload_project_file(
  files,
  task,
  channel = teams_projects_channel(),
  planner = connect_planner()
)

teams_download_file(
  full_teams_path = NULL,
  account = connect_teams(),
  destination_dir = getwd(),
  overwrite = FALSE
)

teams_download_folder(
  full_teams_path = NULL,
  account = connect_teams(),
  destination_dir = getwd(),
  recursive = TRUE,
  overwrite = FALSE
)

teams_upload_file(
  file_path,
  full_teams_path = NULL,
  account = connect_teams(),
  file_name = NULL
)

teams_upload_folder(
  folder_path,
  full_teams_path = NULL,
  account = connect_teams(),
  recursive = TRUE
)

pick_teams_item(
  full_teams_path = NULL,
  account = connect_teams(),
  only_folders = FALSE
)

teams_name(account = connect_teams())

teams_channels_list(account = connect_teams(), plain = TRUE)

teams_view_sharepoint(channel, account = connect_teams())

teams_send_message(
  body,
  channel,
  content_type = c("text", "html"),
  attachments = NULL,
  account = connect_teams()
)

teams_open(teams_path, channel = NULL, account = connect_teams())

teams_get_link(
  teams_path,
  share_type = c("view", "edit"),
  expire_after = "1 month",
  password = NULL,
  channel = NULL,
  account = connect_teams()
)
}
\arguments{
\item{projects_channel_id}{Teams channel ID of the projects}

\item{overwrite}{a \link{logical} to overwrite an existing connection, useful for switching accounts}

\item{account}{a Microsoft 365 account to use for looking up properties. This has to be an object as returned by \code{\link[=connect_teams]{connect_teams()}} or \code{\link[Microsoft365R:client]{Microsoft365R::get_team()}}.}

\item{task}{any task title, task ID, or \code{\link[Microsoft365R:ms_plan_task]{ms_plan_task}} object (e.g. from \code{\link[=planner_task_find]{planner_task_find()}})}

\item{channel}{a Teams folder object. This has to be an object as returned by \code{\link[=teams_projects_channel]{teams_projects_channel()}}.}

\item{planner}{a Microsoft 365 account for Planner. This has to be an object as returned by \code{\link[=connect_planner]{connect_planner()}}.}

\item{file}{the file name to open}

\item{output_file}{path of the output file}

\item{fun}{function to use for rendering. Can be e.g. \link[rmarkdown:render]{rmarkdown::render} or \link[quarto:quarto_render]{quarto::quarto_render}.}

\item{...}{arguments passed on to \code{fun}}

\item{files}{the files to upload}

\item{full_teams_path}{a full path in Teams, \strong{including the Team name and the channel name}. Leave blank to use interactive mode, which allows file/folder picking from a list in the console.}

\item{destination_dir}{a folder to download the file or folder to, defaults to the current working directory.}

\item{recursive}{download/upload all files within the folder}

\item{file_path}{local path of the file to upload. Can also be an \R object to save it as RDS to Teams.}

\item{file_name}{a file name to use if \code{file_path} is an \R object}

\item{folder_path}{local path of the folder to upload}

\item{only_folders}{only show folders, not files}

\item{plain}{return as plain names, not as \code{Azure} objects}

\item{body}{text of the message}

\item{content_type}{type of content, must be "text" or "html"}

\item{attachments}{vector of file locations of attachments to add to the message}

\item{teams_path}{file location in Microsoft Teams, may also contain the channel name if \code{channel} is \code{NULL}, e.g., \code{teams_path = "channel name/test.xlsx"}}

\item{share_type}{type of share, must be \code{"view"} (default) or \code{"edit"}}

\item{expire_after}{time span after which the share link expires, defaults to \code{"1 month"}, can also be e.g. \code{"7 days"}}

\item{password}{password to set for share link, defaults to blank}
}
\description{
These functions use the connection to Microsoft Teams set up with \code{\link[=connect_teams]{connect_teams()}}.
}
\details{
The \code{\link[=teams_new_project]{teams_new_project()}} function:
\enumerate{
\item Checks if there is a Planner task with the correct task title
\item Creates a new folder in Teams in the projects channel
\item Updates the task to contain the project folder URL as an attachment
}

The \code{\link[=teams_download_project_file]{teams_download_project_file()}} function will download the given project file to a temporary location, and will return the path of this location. This makes it possible to use \code{\link[=source]{source()}}, \code{\link[rmarkdown:render]{rmarkdown::render()}} or \code{\link[quarto:quarto_render]{quarto::quarto_render()}} using the \code{\link[=teams_download_project_file]{teams_download_project_file()}} function as input.

The \code{\link[=teams_render_project_file]{teams_render_project_file()}} function allows to render a Teams file. It downloads the Teams file using \code{\link[=teams_download_project_file]{teams_download_project_file()}}, runs the rendering function set in \code{fun}, and uploads the resulting output file back to Teams using the same file name a \code{file}, but with the new file extension (such as pdf, html, or docx). It \strong{invisibly returns} the temporary local file location, so that the output of \code{\link[=teams_render_project_file]{teams_render_project_file()}} can be given to e.g. \code{\link[certemail:mail]{certemail::mail()}} as an attachment.

The \code{\link[=teams_download_file]{teams_download_file()}} and \code{\link[=teams_download_folder]{teams_download_folder()}} functions use \code{\link[=pick_teams_item]{pick_teams_item()}} to select a file or folder, after which they will be downloaded to the destination folder.

The \code{\link[=teams_upload_file]{teams_upload_file()}} and \code{\link[=teams_upload_folder]{teams_upload_folder()}} functions use \code{\link[=pick_teams_item]{pick_teams_item()}} to select the destination folder on Teams. \strong{Notice} that these upload functions have not \code{overwrite} argument - Microsoft365R does not support them since overwrite means that a new file version will be created on Teams.

The \code{\link[=pick_teams_item]{pick_teams_item()}} function provides an interactive way to select a file in any Team, any channel. It returns a list with the properties \code{group_id}, \code{is_private}, \code{channel_id}, \code{item_id}, \code{item_name}, \code{item_path}, and \code{full_path} of the Team item.

\code{\link[=teams_send_message]{teams_send_message()}} can also take a \link{data.frame}, which will be converted to HTML with \link[certestyle:plain_html_table]{plain_html_table()}. If the input is a vector length > 1, the input will be collapsed with linebreaks.
}
\examples{
\dontrun{
# PROJECT-RELATED ------------------------------------------------------

# Project-related Teams function rely on existing Planner tasks.

# create a new project, which will be a folder in the Teams channel
# for this, the task 'My Planner task' must already exist
teams_new_project("My Planner task")

# the task 'My Planner task' will now contain the URL to the project

# upload a file there
teams_upload_project_file("analysis.Rmd", "My Planner task")

# render R markdown or Quarto from and to the cloud
teams_render_project_file("analysis.Rmd", "My Planner task")
# this will put the output file in the same Teams folder as 'analysis.Rmd'

teams_open("test.xlsx", "My Channel")
teams_open("my channel/test.xlsx") # shorter version, tries to find channel


# PROJECT-UNRELATED ----------------------------------------------------

# by not specifying a remote location, a file picker will show in the console:
teams_download_file()
teams_download_folder("MyTeamName/MyChannelName/MySubFolder/")

teams_upload_file("myfile.docx", full_teams_path = "MyTeamName/MyChannelName/MySubFolder/")

# also supports data frames, they will be saved as RDS
mtcars |> 
  teams_upload_file("MyTeamName/MyChannelName/MySubFolder/")
}
}
