% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trello.R
\name{trello}
\alias{trello}
\alias{trello_upload}
\alias{trello_credentials}
\alias{trello_get_boards}
\alias{trello_get_board_name}
\alias{trello_get_lists}
\alias{trello_get_members}
\alias{trello_get_cards}
\alias{trello_get_labels}
\alias{trello_get_customfields}
\alias{trello_get_checklists}
\alias{trello_get_comments}
\alias{trello_my_cards}
\alias{trello_search_any}
\alias{trello_search_card}
\alias{trello_open_board}
\alias{trello_open_card}
\alias{trello_get_card_property}
\alias{trello_get_card_id}
\alias{trello_get_creation_datetime}
\alias{trello_set_comment}
\alias{trello_set_members}
\alias{trello_set_deadline}
\alias{trello_add_task}
\alias{trello_set_task_state}
\alias{trello_move_card}
\title{Work with Trello Cards}
\usage{
trello_upload(
  title,
  desc = "",
  requested_by = "",
  project_path = "",
  member = trello_credentials("membername"),
  prio = read_secret("trello.default.prio"),
  duedate = "",
  checklist = "",
  checklist_name = read_secret("trello.default.checklist"),
  comments = "",
  attachments = "",
  list = read_secret("trello.default.list"),
  board = read_secret("trello.default.board"),
  key = trello_credentials("key"),
  token = trello_credentials("token"),
  ...
)

trello_credentials(x = c("member", "key", "token", "membername"))

trello_get_boards(
  username = trello_credentials("member"),
  key = trello_credentials("key"),
  token = trello_credentials("token")
)

trello_get_board_name(
  board = read_secret("trello.default.board"),
  username = trello_credentials("member"),
  key = trello_credentials("key"),
  token = trello_credentials("token")
)

trello_get_lists(
  board = read_secret("trello.default.board"),
  key = trello_credentials("key"),
  token = trello_credentials("token")
)

trello_get_members(
  board = read_secret("trello.default.board"),
  key = trello_credentials("key"),
  token = trello_credentials("token")
)

trello_get_cards(
  board = read_secret("trello.default.board"),
  key = trello_credentials("key"),
  token = trello_credentials("token")
)

trello_get_labels(
  board = read_secret("trello.default.board"),
  key = trello_credentials("key"),
  token = trello_credentials("token")
)

trello_get_customfields(
  board = read_secret("trello.default.board"),
  key = trello_credentials("key"),
  token = trello_credentials("token")
)

trello_get_checklists(
  board = read_secret("trello.default.board"),
  key = trello_credentials("key"),
  token = trello_credentials("token")
)

trello_get_comments(
  card_id,
  key = trello_credentials("key"),
  token = trello_credentials("token")
)

trello_my_cards(
  board = read_secret("trello.default.board"),
  username = trello_credentials("member"),
  key = trello_credentials("key"),
  token = trello_credentials("token"),
  list = read_secret("trello.current.list"),
  to_console = TRUE
)

trello_search_any(
  x,
  key = trello_credentials("key"),
  token = trello_credentials("token")
)

trello_search_card(
  x = NULL,
  return_all = FALSE,
  board = read_secret("trello.default.board"),
  key = trello_credentials("key"),
  token = trello_credentials("token")
)

trello_open_board(board = read_secret("trello.default.board"))

trello_open_card()

trello_get_card_property(
  card_number,
  property,
  board = read_secret("trello.default.board"),
  key = trello_credentials("key"),
  token = trello_credentials("token")
)

trello_get_card_id(
  card_number,
  board = read_secret("trello.default.board"),
  key = trello_credentials("key"),
  token = trello_credentials("token")
)

trello_get_creation_datetime(
  card_number,
  board = read_secret("trello.default.board"),
  key = trello_credentials("key"),
  token = trello_credentials("token")
)

trello_set_comment(
  card_id,
  comment,
  key = trello_credentials("key"),
  token = trello_credentials("token")
)

trello_set_members(
  card_id,
  member,
  board = read_secret("trello.default.board"),
  key = trello_credentials("key"),
  token = trello_credentials("token")
)

trello_set_deadline(
  card_id,
  duedate,
  duecomplete = FALSE,
  key = trello_credentials("key"),
  token = trello_credentials("token")
)

trello_add_task(
  card_id,
  new_items = NULL,
  checklist_name = "Taken",
  board = read_secret("trello.default.board"),
  key = trello_credentials("key"),
  token = trello_credentials("token")
)

trello_set_task_state(
  card_id,
  checkitem_id,
  new_value = TRUE,
  key = trello_credentials("key"),
  token = trello_credentials("token")
)

trello_move_card(
  card_id,
  list_id,
  key = trello_credentials("key"),
  token = trello_credentials("token")
)
}
\arguments{
\item{title}{card title}

\item{desc}{card description}

\item{requested_by}{name of requester}

\item{project_path}{path to project to which this card belongs to}

\item{member}{Trello member, full name}

\item{prio}{priority, must be label name}

\item{duedate}{a \link{Date} object}

\item{checklist}{items for checklist, can be character vector}

\item{checklist_name}{name of the checklist}

\item{comments}{comment to put on card, can be character vector}

\item{attachments}{attachments to put on card}

\item{list}{Trello list}

\item{board}{Trello board}

\item{key}{Trello API key}

\item{token}{Trello API token}

\item{...}{arguments passed on to methods}

\item{x}{search string}

\item{username}{Trello username}

\item{card_id}{Trello card ID (\emph{not} the card number)}

\item{to_console}{a \link{logical} to indicate whether the card data should be printed to the Console}

\item{return_all}{a \link{logical} to indicate whether a named vector of short URLs must be returned (internally used by \code{\link[=project_add]{project_add()}}) instead of a \link{double} vector}

\item{card_number}{Trello card number}

\item{property}{property to take from card}

\item{comment}{the comment to set, supports markdown}

\item{duecomplete}{a \link{logical} to indicate whether due date is already completed}

\item{new_items}{character vector of checklist items}

\item{checkitem_id}{checkitem ID of item in checklist}

\item{new_value}{the new value to set: a \link{logical} to indicate the 'complete' state of the checklist item}

\item{list_id}{ID of the Trello board list}
}
\description{
These functions call the \href{https://api.trello.com}{Trello API}. It was replaced with \link[=connect_planner]{Microsoft Planner functions}.
}
\details{
The \code{\link[=trello_upload]{trello_upload()}} returns the newly created Trello card number if the upload was successful.

The function \code{\link[=trello_search_any]{trello_search_any()}} returns all cards data as a \link{data.frame} and is used internally by \code{\link[=trello_search_card]{trello_search_card()}}.
}
