% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validation_authorisation.R
\name{validation_authorisation}
\alias{validation_authorisation}
\alias{validate_request_file}
\alias{validate_file}
\alias{authorise_file}
\title{Validation and Authorisation}
\usage{
validate_request_file(
  drive_item,
  local_file = NULL,
  planner = connect_planner()
)

validate_file(
  drive_item,
  user = Sys.info()["user"],
  authorise_request = FALSE,
  teams = connect_teams(),
  planner = connect_planner()
)

authorise_file(
  drive_item,
  user = Sys.info()["user"],
  teams = connect_teams(),
  planner = connect_planner()
)
}
\arguments{
\item{drive_item}{a Drive Item object of a file}

\item{local_file}{a location of the local file. If set, this will allow a direct Positron link on the attachment of the Planner task.}

\item{planner}{a Planner account, e.g. outcome of \code{\link[=connect_planner]{connect_planner()}}}

\item{user}{a Certe user, who is member of the SharePoint site where \code{file} is stored}

\item{authorise_request}{option to request for authorisation after validation}

\item{teams}{a Teams account, e.g. outcome of \code{\link[=connect_teams]{connect_teams()}}}
}
\description{
These functions handle validation and authorisation of files stored on a SharePoint site via the Microsoft Graph API, updating corresponding metadata fields and optionally interacting with Microsoft Planner for workflow management.
}
\details{
The functions in this set operate on Microsoft 365 Drive Items (class \code{ms_drive_item}) and are designed to work within a controlled document workflow involving SharePoint and Planner:
\itemize{
\item \code{validate_request_file()} creates a label on a Planner task requesting validation for a file.
\item \code{validate_file()} writes a timestamp and user ID to the file's metadata to record validation, using the authenticated Teams token. If \code{authorise_request = TRUE}, it also triggers a request for authorisation by labelling a task in Planner associated with the parent folder of the file.
\item \code{authorise_file()} writes a timestamp and user ID to the file's metadata to reflect authorisation of the file. It also labels the associated Planner task to indicate successful authorisation.
}

All API calls use the Microsoft Graph API and require appropriate OAuth tokens via Teams or Planner accounts. The structure assumes SharePoint lists are configured with custom metadata columns for validation and authorisation tracking.
}
