% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ms_teams.R
\name{teams}
\alias{teams}
\alias{teams_connect}
\alias{teams_projects_channel}
\alias{teams_new_project}
\alias{teams_browse_project}
\alias{teams_get_project_file}
\alias{teams_render_project_file}
\alias{teams_view_project_file}
\alias{teams_upload_project_file}
\alias{teams_name}
\alias{teams_channels}
\alias{teams_view_sharepoint}
\alias{teams_send_message}
\alias{teams_upload}
\alias{teams_download}
\alias{teams_import}
\alias{teams_open}
\alias{teams_get_link}
\title{Connect to Microsoft Teams via Microsoft 365}
\usage{
teams_connect(team_name = read_secret("team.name"), ...)

teams_projects_channel(
  projects_channel = read_secret("teams.projects.channel"),
  account = teams_connect()
)

teams_new_project(
  task_title,
  channel = teams_projects_channel(),
  planner = planner_connect()
)

teams_browse_project(
  task_title,
  channel = teams_projects_channel(),
  planner = planner_connect()
)

teams_get_project_file(
  file,
  task_title,
  channel = teams_projects_channel(),
  planner = planner_connect()
)

teams_render_project_file(
  file,
  task_title,
  output_file = NULL,
  fun = rmarkdown::render,
  ...,
  channel = teams_projects_channel(),
  planner = planner_connect()
)

teams_view_project_file(
  file,
  task_title,
  channel = teams_projects_channel(),
  planner = planner_connect()
)

teams_upload_project_file(
  files,
  task_title,
  channel = teams_projects_channel(),
  planner = planner_connect()
)

teams_name(account = teams_connect())

teams_channels(account = teams_connect())

teams_view_sharepoint(channel, account = teams_connect())

teams_send_message(
  body,
  channel,
  content_type = c("text", "html"),
  attachments = NULL,
  account = teams_connect()
)

teams_upload(
  local_path,
  teams_path = basename(local_path),
  card_number = project_get_current_id(ask = FALSE),
  channel = NULL,
  account = teams_connect()
)

teams_download(
  teams_path,
  local_path = basename(teams_path),
  card_number = project_get_current_id(ask = FALSE),
  channel = NULL,
  account = teams_connect()
)

teams_import(
  teams_path,
  card_number = project_get_current_id(ask = FALSE),
  channel = NULL,
  account = teams_connect()
)

teams_open(teams_path, channel = NULL, account = teams_connect())

teams_get_link(
  teams_path,
  share_type = c("view", "edit"),
  expire_after = "1 month",
  password = NULL,
  channel = NULL,
  account = teams_connect()
)
}
\arguments{
\item{team_name}{name of the team}

\item{...}{arguments passed on to \code{fun}}

\item{projects_channel}{Teams channel name of the projects}

\item{account}{a Microsoft 365 account to use for looking up properties. This has to be an object as returned by \code{\link[=teams_connect]{teams_connect()}} or \code{\link[Microsoft365R:client]{Microsoft365R::get_team()}}.}

\item{task_title}{title of the Planner task}

\item{channel}{a Teams folder object. This has to be an object as returned by \code{\link[=teams_projects_channel]{teams_projects_channel()}}.}

\item{planner}{a Microsoft 365 account for Planner. This has to be an object as returned by \code{\link[=planner_connect]{planner_connect()}}.}

\item{file}{the file name to open}

\item{output_file}{path of the output file}

\item{fun}{function to use for rendering. Can be e.g. \link[rmarkdown:render]{rmarkdown::render} or \link[quarto:quarto_render]{quarto::quarto_render}.}

\item{files}{the files to upload}

\item{body}{text of the message}

\item{content_type}{type of content, must be "text" or "html"}

\item{attachments}{vector of file locations of attachments to add to the message}

\item{local_path}{file location on the local system, can also be a \link{data.frame} which will then be saved locally to the temp folder first}

\item{teams_path}{file location in Microsoft Teams, may also contain the channel name if \code{channel} is \code{NULL}, e.g., \code{teams_path = "channel name/test.xlsx"}}

\item{card_number}{Trello card number}

\item{share_type}{type of share, must be \code{"view"} (default) or \code{"edit"}}

\item{expire_after}{time span after which the share link expires, defaults to \code{"1 month"}, can also be e.g. \code{"7 days"}}

\item{password}{password to set for share link, defaults to blank}
}
\description{
These functions create a connection to Microsoft Teams via Microsoft 365 and saves the connection to the \code{certeprojects} package environment. The \verb{teams_*()} functions allow to work with this connection.
}
\details{
The \code{\link[=teams_new_project]{teams_new_project()}} function:
\enumerate{
\item Checks if there is a Planner task with the correct task title
\item Creates a new folder in Teams in the projects channel
\item Updates the task to contain the project folder URL as an attachment
}

The \code{\link[=teams_get_project_file]{teams_get_project_file()}} function will download the given project file to a temporary location, and will return the path of this location. This makes it possible to use \code{\link[=source]{source()}}, \code{\link[rmarkdown:render]{rmarkdown::render()}} or \code{\link[quarto:quarto_render]{quarto::quarto_render()}} using the \code{\link[=teams_get_project_file]{teams_get_project_file()}} function as input.

The \code{\link[=teams_render_project_file]{teams_render_project_file()}} function allows to render a Teams file. It downloads the Teams file using \code{\link[=teams_get_project_file]{teams_get_project_file()}}, runs the rendering function set in \code{fun}, and uploads the resulting output file back to Teams using the same file name a \code{file}, but with the new file extension (such as pdf, html, or docx).
}
\examples{
\dontrun{
# PROJECT-RELATED --------------------------------------------------------

# Project-related Teams function rely on existing Planner tasks.

# create a new project, which will be a folder in the Teams channel
# for this, the task 'My Planner task' must already exist
teams_new_project("My Planner task")

# the task 'My Planner task' will now contain the URL to the project

# upload a file there
teams_upload_project_file("analysis.Rmd", "My Planner task")

# render R markdown or Quarto from and to the cloud
teams_render_project_file("analysis.Rmd", "My Planner task")
# this will put the output file in the same Teams folder as 'analysis.Rmd'


# PROJECT-UNRELATED ------------------------------------------------------

teams_upload("myfile.docx", channel = "My Channel")
teams_upload("myfile.docx", "my channel/my folder/test.docx")

# also supports data frames, they will be saved locally in a temp folder
teams_upload(mtcars, channel = "My Channel")
mtcars |> 
  teams_upload(channel = "My Channel")
  
  
# integrates with department projects:

# upload "myfile.docx" from the project folder of p123 to "My Channel":
teams_upload("myfile.docx", channel = "My Channel", card_number = 123)
# download "myfile.docx" from "My Channel" to the project folder of p123:
teams_download("myfile.docx", channel = "My Channel", card_number = 123)
teams_download("mychannel/myfile.docx", card_number = 123)

# direct import from Teams requires the 'certetoolbox' package
x <- teams_import("mychannel/myfile.docx")
x <- teams_import("mychannel/myfile.docx", card_number = 123)
x <- teams_import("myfile.docx", channel = "My Channel", card_number = 123)

# open a file in Excel Online
teams_open("test.xlsx", "My Channel")
teams_open("my channel/test.xlsx") # shorter version, tries to find channel
}
}
